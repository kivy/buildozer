import datetime

class CarMaintenance: def init(self): self.records = []  # —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π

def add_record(self, mileage, oil_change=False, filter_change=False, fuel_liters=0,
               parts_bought=None, parts_replaced=None, tools=None,
               first_aid=False, fire_extinguisher=False, triangle=False):
    record = {
        "date": datetime.date.today().strftime("%Y-%m-%d"),
        "mileage": mileage,
        "oil_change": oil_change,
        "filter_change": filter_change,
        "fuel_liters": fuel_liters,
        "parts_bought": parts_bought if parts_bought else [],
        "parts_replaced": parts_replaced if parts_replaced else [],
        "tools": tools if tools else [],
        "first_aid": first_aid,
        "fire_extinguisher": fire_extinguisher,
        "triangle": triangle
    }
    self.records.append(record)
    print("–ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞! ‚úÖ")

def show_records(self):
    if not self.records:
        print("–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π!")
        return
    for r in self.records:
        print(f"–î–∞—Ç–∞: {r['date']} | –ü—Ä–æ–±–µ–≥: {r['mileage']} –∫–º")
        print(f"  –ú–∞—Å–ª–æ –º–µ–Ω—è–ª–æ—Å—å: {r['oil_change']} | –§–∏–ª—å—Ç—Ä –º–µ–Ω—è–ª—Å—è: {r['filter_change']} | –¢–æ–ø–ª–∏–≤–æ: {r['fuel_liters']} –ª")
        print(f"  –ö—É–ø–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—á–∞—Å—Ç–∏: {', '.join(r['parts_bought']) if r['parts_bought'] else '–ù–µ—Ç'}")
        print(f"  –ó–∞–º–µ–Ω—ë–Ω–Ω—ã–µ –∑–∞–ø—á–∞—Å—Ç–∏: {', '.join(r['parts_replaced']) if r['parts_replaced'] else '–ù–µ—Ç'}")
        print(f"  –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –≤ –º–∞—à–∏–Ω–µ: {', '.join(r['tools']) if r['tools'] else '–ù–µ—Ç'}")
        print(f"  –ê–≤–∞—Ä–∏–π–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ -> –ê–ø—Ç–µ—á–∫–∞: {r['first_aid']} | –û–≥–Ω–µ—Ç—É—à–∏—Ç–µ–ª—å: {r['fire_extinguisher']} | –¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫: {r['triangle']}")
        print("-")

def last_oil_change(self):
    for r in reversed(self.records):
        if r["oil_change"]:
            return f"–ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞ –±—ã–ª–∞ –Ω–∞ –ø—Ä–æ–±–µ–≥–µ {r['mileage']} –∫–º ({r['date']})"
    return "–ó–∞–º–µ–Ω—ã –º–∞—Å–ª–∞ –µ—â—ë –Ω–µ –±—ã–ª–æ."

def last_filter_change(self):
    for r in reversed(self.records):
        if r["filter_change"]:
            return f"–ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–º–µ–Ω–∞ —Ñ–∏–ª—å—Ç—Ä–∞ –±—ã–ª–∞ –Ω–∞ –ø—Ä–æ–±–µ–≥–µ {r['mileage']} –∫–º ({r['date']})"
    return "–ó–∞–º–µ–Ω—ã —Ñ–∏–ª—å—Ç—Ä–∞ –µ—â—ë –Ω–µ –±—ã–ª–æ."

def main(): car = CarMaintenance() while True: print("\n--- Car Maintenance Tracker ---") print("1. –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å") print("2. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏") print("3. –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞") print("4. –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–º–µ–Ω–∞ —Ñ–∏–ª—å—Ç—Ä–∞") print("5. –í—ã–π—Ç–∏")

choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ")

    if choice == "1":
        mileage = int(input("–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–±–µ–≥ (–∫–º): "))
        oil = input("–ú–µ–Ω—è–ª–æ—Å—å –º–∞—Å–ª–æ? (y/n): ").lower() == "y"
        flt = input("–ú–µ–Ω—è–ª—Å—è —Ñ–∏–ª—å—Ç—Ä? (y/n): ").lower() == "y"
        fuel = float(input("–ó–∞–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–æ–ø–ª–∏–≤–∞ (–ª): "))

        parts_bought = input("–ö–∞–∫–∏–µ –∑–∞–ø—á–∞—Å—Ç–∏ –±—ã–ª–∏ –∫—É–ø–ª–µ–Ω—ã (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –µ—Å–ª–∏ –µ—Å—Ç—å): ").split(",") if input("–ï—Å—Ç—å –∫—É–ø–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—á–∞—Å—Ç–∏? (y/n): ").lower() == "y" else []
        parts_replaced = input("–ö–∞–∫–∏–µ –∑–∞–ø—á–∞—Å—Ç–∏ –±—ã–ª–∏ –∑–∞–º–µ–Ω–µ–Ω—ã (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –µ—Å–ª–∏ –µ—Å—Ç—å): ").split(",") if input("–ï—Å—Ç—å –∑–∞–º–µ–Ω—ë–Ω–Ω—ã–µ –∑–∞–ø—á–∞—Å—Ç–∏? (y/n): ").lower() == "y" else []
        tools = input("–ö–∞–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –µ—Å—Ç—å –≤ –º–∞—à–∏–Ω–µ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –µ—Å–ª–∏ –µ—Å—Ç—å): ").split(",") if input("–ï—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã? (y/n): ").lower() == "y" else []

        first_aid = input("–ï—Å—Ç—å –∞–ø—Ç–µ—á–∫–∞? (y/n): ").lower() == "y"
        fire_extinguisher = input("–ï—Å—Ç—å –æ–≥–Ω–µ—Ç—É—à–∏—Ç–µ–ª—å? (y/n): ").lower() == "y"
        triangle = input("–ï—Å—Ç—å –∞–≤–∞—Ä–∏–π–Ω—ã–π —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫? (y/n): ").lower() == "y"

        car.add_record(mileage, oil, flt, fuel, parts_bought, parts_replaced, tools, first_aid, fire_extinguisher, triangle)

    elif choice == "2":
        car.show_records()

    elif choice == "3":
        print(car.last_oil_change())

    elif choice == "4":
        print(car.last_filter_change())

    elif choice == "5":
        print("–í—ã—Ö–æ–¥...")
        break

    else:
        print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")

if name == "main": main()

pip install kivy kivymd

from kivy.app import App
from kivy.uix.label import Label

class MyApp(App):
    def build(self):
        return Label(text="Car Maintenance Tracker üöó")

MyApp().run()
pip install plyer

from plyer import notification

notification.notify(
    title="–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ üöó",
    message="–ü–æ—Ä–∞ –∑–∞–º–µ–Ω–∏—Ç—å –º–∞—Å–ª–æ!",
    timeout=10
)
